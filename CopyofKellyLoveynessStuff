𝑨 𝒍𝒊𝒔𝒕 𝒐𝒇 𝒄𝒐𝒅𝒆𝒔 𝒕𝒐 𝒉𝒆𝒍𝒑 𝒚𝒐𝒖𝒓 𝒄𝒍𝒖𝒃 𝒆𝒙𝒑𝒆𝒓𝒊𝒆𝒏𝒄𝒆.
All codes goes in console, in developer tools. Depending on browser, console is opened by: ctrl+shift+i, or manually via f12.
For Android, use Kiwi browser. For Apple, use mr-bug-browser.
 
𝑻𝒉𝒆𝒓𝒆 𝒂𝒓𝒆 𝒔𝒆𝒗𝒆𝒓𝒂𝒍 𝒎𝒆𝒕𝒉𝒐𝒅𝒔 𝒕𝒐 𝒎𝒂𝒌𝒆 𝒖𝒔𝒆 𝒐𝒇 𝒕𝒉𝒊𝒔 𝒍𝒊𝒔𝒕.
*. Can manually take codes and use in console, even cherry-pick and store in a notepad and copy paste.
*. Create a bookmark, click on it every time Club is online, name bookmark: javascript:yourcodegoeshere;heregoesanextreifneeded;so(on);
*. Most of the pastebin has been converted to a /chatcommand, Quick-AccessMenu is an extension that's installed once. Easiest method. In addition, includes: images/YouTube in chat, submissive mistresses, autorelog/antidisconnect, auto-join full rooms, auto-enable patreon cheats, remove text limits, can enter asylum/club, commands to switch between hidden backgrunds, one-time/permanent toggles for 𝘽𝙖𝙗𝙮/gag speak, and more.
drive.google.com/drive/folders/1YpScmA5d1_PlECKP_tcOyZRgeBiKK4yD
remember to check out //game add-ons, for similar stuff, before just installing above and leaving.
 
𝙄'𝙫𝙚 𝙖𝙡𝙨𝙤 𝙢𝙖𝙙𝙚 𝙖 𝙙𝙞𝙨𝙘𝙤𝙧𝙙, 𝙪𝙣𝙞𝙩𝙞𝙣𝙜 2 𝙙𝙞𝙛𝙛𝙚𝙧𝙚𝙣𝙩 𝙗𝙤𝙣𝙙𝙖𝙜𝙚 𝙘𝙤𝙢𝙢𝙪𝙣𝙞𝙩𝙞𝙚𝙨 𝙩𝙝𝙖𝙩 𝙝𝙖𝙙 𝙨𝙞𝙡𝙡𝙮 𝙧𝙪𝙡𝙚𝙨 𝙤𝙧 𝙗𝙖𝙙 𝙨𝙩𝙖𝙛𝙛, 𝙬𝙞𝙩𝙝 𝙖 𝙣𝙤-𝙗𝙖𝙣 𝙜𝙪𝙖𝙧𝙖𝙣𝙩𝙚𝙚! 𝙏𝙝𝙚𝙧𝙚 𝙖𝙧𝙚 𝙚𝙫𝙚𝙣 𝙢𝙤𝙧𝙚 𝙘𝙤𝙙𝙚𝙨 𝙞𝙣 𝙩𝙝𝙚𝙧𝙚, 𝙩𝙝𝙖𝙩 𝙬𝙤𝙪𝙡𝙙 𝙗𝙚 𝙛𝙖𝙧 𝙩𝙤𝙤 𝙡𝙖𝙧𝙜𝙚 𝙩𝙤 𝙥𝙤𝙨𝙩 𝙝𝙚𝙧𝙚/difficult because pastebin censorship.
discord.gg/YukepB6RVp
 
𝙎𝙪𝙥𝙚𝙧 𝙩𝙝𝙖𝙣𝙠𝙨 𝙩𝙤 𝙖𝙡𝙡 𝙬𝙝𝙤'𝙫𝙚 𝙝𝙚𝙡𝙥𝙚𝙙 𝙗𝙮 𝙘𝙤𝙣𝙩𝙧𝙞𝙗𝙪𝙩𝙞𝙣𝙜 𝙘𝙤𝙙𝙚𝙨/𝙨𝙤𝙡𝙫𝙞𝙣𝙜 𝙞𝙨𝙨𝙪𝙚𝙨 𝙞𝙣 𝙢𝙖𝙠𝙞𝙣𝙜 𝙩𝙝𝙚𝙢. 𝙄'𝙙 𝙡𝙞𝙨𝙩 𝙢𝙤𝙧𝙚 𝙣𝙖𝙢𝙚𝙨 𝙗𝙪𝙩 𝙨𝙪𝙥𝙧𝙞𝙨𝙞𝙣𝙜𝙡𝙮 𝙢𝙖𝙣𝙮 𝙙𝙤𝙣'𝙩 𝙬𝙖𝙣𝙩 𝙩𝙝𝙖𝙩, 𝙘𝙧𝙖𝙯𝙮, 𝙝𝙪𝙝!
𝙄𝙛 𝙮𝙤𝙪 𝙡𝙞𝙠𝙚 𝙩𝙝𝙞𝙨 𝙜𝙖𝙢𝙚, 𝙧𝙚𝙢𝙚𝙢𝙗𝙚𝙧 𝙩𝙤 𝙙𝙤𝙣𝙖𝙩𝙚: www.patreon.com/BondageProjects
If you do, maybe everything on this list will be added officially one day as an in-game function.
 
 
𝑾𝑯𝑨𝑻'𝑺 𝑵𝑬𝑾!!!
So, yeah come to my attention--and only came this long after because no one tells me these things--that the unrestrict code is not obviously placed in the correct section. While this is intended, the correct section did not say where the code is.
So, Im just saying that the unrestrict code is placed at the very bottom of the pastebin, this is because I intend to rework the,
 
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////// 
𝘾𝙊𝙈𝙋𝙇𝙀𝙏𝙀 𝙌𝙐𝙄𝘾𝙆𝙂𝙐𝙄𝘿𝙀 (Find the command of interest, then ctrl+f and search X2. Or the desired tag.)
//𝘽𝘼𝙎𝙄𝘾:
X1: Skills, money, reputation boosters.
X2: 1 hour Skill booster.
X3: Asylum titles and jobs.
X4: kidnapp titles and jobs.
x5: club mistress titles and jobs, this one skips cutscene.
X6: club mistress titles and jobs, this one has a cutscene.
X7: Become your own owner
X8: Become your own lover
X9: Allows a submissive to be freed from their owner, does not bypass extreme. Because Ben patched that. While refusing to add breaking to owners.
X10: End extreme/hardcore difficulty.
X11: Remove owner/club-slave collar.
X12: Add every item in the game to your inventory.
X13: Reset inventory.
//𝑮𝑨𝑴𝑬 𝑨𝑫𝑫-𝑶𝑵𝑺
G1: BondageClubTools.
G2: Curse.
G3; Misaki's animation-extender.
G4: Myrhanda's moaner script.
G5: BC-Util. 
G6: 𝙌𝙪𝙞𝙘𝙠-𝘼𝙘𝙘𝙚𝙨𝙨𝙈𝙚𝙣𝙪2.1.
G7: ImprovedStruggle add-on.
//𝑮𝑨𝑴𝑬 𝑬𝑵𝑯𝑨𝑵𝑪𝑯𝑬𝑴𝑬𝑵𝑻
Z1: Unrestrict code. Will make gameplay soooo much nicer.
Z2: Enable Patreon/cheat codes.
Z3: Grant use of owner locks, if you have no owner.
Z4: Grant use of lover locks, if you have no owner.
Z5: Adds every item, especially hidden/rare items to the shop.
Z6: Ability to hear gag talk.
Z7: Join asylum/college without meeting requirements.
Z8: Remove text limits on certain devices, like wooden sign.
Z9: Auto kicker code, to prevent 0 day account spam.
Z10: Code that simulates a moving mouth when sending messages in chat.
Z11: KinkyDungeon codes.
Z12: Code to manually set background. Useful to set background to hidden stuff. But see Z13 too...
Z13: Adds every hidden background to the current list of backgrounds in admin's panel.
//𝙊𝙏𝙃𝙀𝙍:
V1: Every personal setting there is, currently set to Extreme Mode Difficulty.
V2: Prevent/enable remote use on others (vibrators and such).
V3: Prevent/enable lock use on self.
V4: Prevent/enable key for lock use on self.
V5: Prevent/enable vibrator remote use on self.
V6: Prevent/enable whisper.
V7: Prevent/enable wardrobe use.
V8: Opens wardrobe, even if locked.
V9: Leaves a conversation had with an NPC, just like that.
V10: A /safeword command that removes whichever item you're zoomed in on, such as arms. Useful for console-added/unremovable stuff.
V11: a /safeword command that removes everything. Useful for console-added/unremovable stuff.
V12: Leaves a room when trapped. Use below as a single code.
V13: committing self to asylum, except can select amount of time.
V14: mMakes use love chastity belt. 
V15: Just a list of restriction removes that I can't figured out what to do with.
V16: Adds a custom word on your profile's sheet, in place of lovers or owner. Can be named anything. Like an heart emoji or wikipedia link.
V17: Create custom action messages in chat.
V18: Color changing code!
//𝙉𝙋𝘾
N1: Changes NPs trait and love status. 
N2: become: submissive/lover/owner of npc.
N3: Enable the option to break up with an NPC lover if disabled. Also listed in fixes.
N4: Ability to add any NPC to hotel room.
/N5: Custom NPC in your hotel room. As lover/friend/other.
//𝘼𝙐𝘿𝙄𝙊:
A1: List of every audio in the game, in a playable format.
A2: Changes beep sound.
A3: Changes friendlist beep sound.
A4: How to set a different "room entry" and "beep" sound.
//𝑩𝑶𝑵𝑫𝑨𝑮𝑬𝑪𝑶𝑳𝑳𝑬𝑮𝑬:
//B1: Collar self ability.
//B2: List of clothes.
//B3: List of every item.
//B4: Unlock cheats.
//B5: 𝙇𝙞𝙨𝙩 𝙤𝙛 𝙗𝙪𝙩𝙩𝙤𝙣𝙨 𝙛𝙤𝙧 𝙘𝙝𝙚𝙖𝙩𝙨 𝙖𝙗𝙤𝙫𝙚.
//𝙁𝙄𝙓:
F1: A /safeword command that removes whichever item you're zoomed in on, such as arms.
F2: A /safeword command that removes everything.
F3: Allows a submissive to break from their owner, ignores extreme mode prevention.
F4: Enable the option to break up with an NPC lover if disabled.
F5: fixes reputation errors.
F6: fixces skill errors.
F7: If you're hopelessly being dragged back into the same room, unable to leave it, use this then try to leave.
F8: A fix for in the event LARP battle mode, in chat-room, crashes when selecting role.
//𝘼𝘿𝙑𝙄𝘾𝙀 𝒂𝒏𝒅 𝑮𝑨𝑴𝑬 𝑻𝑼𝑻𝑶𝑹𝑰𝑨𝑳:
T1: Getting wardrobe.
T2: Buy stuff from shop easier.
T3: Creating an access list in your private room, allowing only authorized people to join.
T4: What is the evasion bonus for struggle assist? 
T5: What are waiting times for npc's for sub/dom trial?
T6: Fix for disconnects in inactive tabs.
//𝑪𝒐𝒅𝒆 𝑬𝒙𝒂𝒎𝒑𝒍𝒆𝒔.
E1: A targeting method.
E2: Alternative targeting methid. First one is preferred.
E3: Alternative targeting method (first one is preferred):
E4: Console logging example.
E5: random color applied on eyes example.
E6: Property/Modular item modify.
E7: looping timer example.
E8: On/Off switch in variable form.
//𝑹𝑬𝑻𝑰𝑹𝑬𝑫 𝘾𝙊𝘿𝙀:
Eh just no I don't wanna, maybe later
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////// 
//𝑩𝑨𝑺𝑰𝑪
 
//X1: Skills, reputations, money commands. Change the numbers as desired. 10 is max, except for money.
Player.Money=99999;ServerPlayerSync();
SkillChange("Infiltration", 10);
SkillChange("SelfBondage", 10);//self-tie
SkillChange("Willpower", 10);//Resist orgasms
SkillChange("Evasion", 10);//Battle skills
SkillChange("Bondage", 10);//Tie others
SkillChange("Dressage", 10);//ABDL
ReputationChange("Gaming", 100);//Arcade and KinkyDungeon
ReputationChange("Gambling", 100);//Gambling room
ReputationChange("LARP", 100);
ReputationChange("Maid", 100);//Can be a Maid
ReputationChange("ABDL", 100);
ReputationChange("Nurse", 100);//Can be a Nurse
LogAdd("BondageCollege", "Import");//Give College Import title.
LogAdd("KidnapSophie", "Sarah");//Give Sarah title.
CheatAllow = true;//Give Patreon title.
SkillChange("LockPicking", 10)
 
GameLARPLevelProgress(10000);//Start LARP game-mode, select class, use 12 times to reach max level, which is 10.
 
 
 
//X2: Skill booster. Adds a 1 hour, 5skills, boost to evasion/bondage.
LogAdd("ModifierLevel", "SkillModifier", 105);LogAdd("ModifierDuration", "SkillModifier", CurrentTime + 3600000); 
 
 
 
//X3: Only one asylum title can be active at a time. Select one line from below.
ReputationChange("Asylum", 200);ReputationChange("Asylum", -50);//nurse title
ReputationChange("Asylum", -200);ReputationChange("Asylum", 50);//patient title
ReputationChange("Asylum", -200);//PermanentPatient title
ReputationChange("Asylum", 200);//Doctor title
 
 
 
//X4: Only one kidnapp title can be active at a time. Select one line from below.
ReputationChange("Kidnap", 200);ReputationChange("Kidnap", -50);//Kidnapper title,
ReputationChange("Kidnap", 200);//MasterKidnapper title
 
 
//X5: Become a club mistress instantly. Skips cutscene. Select only one from below.
LogAdd("ClubMistress", "Management");ReputationChange("Dominant", 200);//become mistress
LogDelete("ClubMistress", "Management");ReputationChange("Dominant", -200);//quit mistress
 
 
 
//X6: Become club mistress, with cutscene. Use all below. Then proceed to club management.
ReputationChange("Dominant", 200);
function ManagementCannotBeClubMistressLaugh(){return false};
function ManagementCannotBeClubMistressTime(){return false}
 
 
 
//X7: Become your own owner. Break via club management. Use within chat-room. After 7 days, reuse code to become owner.
ServerSend("AccountOwnership", { MemberNumber: Player.MemberNumber, Action: "Propose" && "Accept" })
ServerSend("AccountOwnership", { MemberNumber: Player.MemberNumber, Action: "CanOfferEndTrial" && "Propose" });
ServerSend("AccountOwnership", { MemberNumber: Player.MemberNumber, Action: "CanEndTrial" && "Accept" });
//CURRENTLY IT IS NOT POSSIBLE TO BYPASS TRIAL STATE. AN ALTERNATIVE IS COMING.
 
 
 
//X8: Become your own lover. Break via club management. Use within chat-room.After 7 days, reuse code to become enaged/married.
ServerSend("AccountLovership", { MemberNumber: Player.MemberNumber, Action: "Propose" && "Accept" })
ServerSend("AccountLovership", { MemberNumber: Player.MemberNumber, Action: "CanOfferBeginWedding" && "Propose" });
ServerSend("AccountLovership", { MemberNumber: Player.MemberNumber, Action: "CanBeginWedding" && "Accept" });
//warning: breaking up with yourself will randomly take another lover from you. Uncomfirmed if this occurs every time/randomly, but assume it would if you want to be careful.
 
 
 
//X9: Frees a submissive from their owner, does not ignore extreme mode. Use within chat-room. 
ManagementReleaseFromOwner();
 
 
 
//X10: End extreme mode. 7 day cool-down occur after use. Manually select the next mode desired in settings. Must reuse every restart if it resets per log-in.
Player.Difficulty = [];
 
 
 
//X11: Remove owner/club-slave collar.  Use below as a single code. Also included in Rule Change.
ServerSend("ChatRoomChat", { Content: "PlayerOwnerCollarRelease", Type: "Action", Dictionary: [{Tag: "DestinationCharacterName", Text: Player.Name, MemberNumber: Player.MemberNumber}] });
LogAdd("ReleasedCollar", "OwnerRule");
 
 
 
//X12: Code to add every item in the game to your inventory.
AssetFemale3DCG.forEach(group=>group.Asset.forEach(item=>InventoryAdd(Player, item.Name, group.Group)));
ServerPlayerInventorySync();
 
 
 
//X13: Reset inventory, remove all previously-bought items and clothes. Can rebuy from shop.
Player.Inventory=[];ServerPlayerInventorySync();
 
 
////////////////////////////////////////////////////////////////////////////////////// 
////////////////////////////////////////////////////////////////////////////////////// 
//////////////////////////////////////////////////////////////////////////////////////
//GAME ADD-ONS (does not go in console):
 
 
//G1: A data-storing add-on, that stores chat logs/list of players met/allows beeps to become a Windows notification. An signed .xpi for FireFox exists on the Discord (one-time installation).
chrome.google.com/webstore/detail/bondage-club-tools/pgigbkbcecbpgijnfhmpmkipgondpnpc
 
 
//G2: A functionality-extender, increasing the amount of things possible to do. Link has a detailed wikia.
github.com/ace-1331/ace12401-cursedscript
 
 
//G3; An animation-extender, allowing many custom poses/emotes. Such as, wiggle ears/wings, hop around, responses to items used on you automatically, so on. Script has a detailed manual when used.
docs.google.com/document/d/1H7RidEXhFIAVFH_Av0HgTZ6Zv1XteK54R46GaUFGNEs/edit?u
 
 
//G4: A script that posts "OooH" and "AHhhH" noises in chat (can't say the word, pastebin censorship), when having ~fun~. An signed .xpi for FireFox exists on the Discord (one-time installation).
dropbox.com/sh/8kcbiucpoyqq1r9/AADWU5HHqg9OiFMl5u0_D47ma?dl=0 
 
 
//G5: a game-addon providing more wardrobe slots, a direct chat with others who have it installed, and "layers" to wardrobe (allowing socks to be worn outside of shoes, for example).
github.com/TessaTech/BC-Util
 
 
 
//G6: 𝙌𝙪𝙞𝙘𝙠-𝘼𝙘𝙘𝙚𝙨𝙨𝙈𝙚𝙣𝙪2.1, 𝙖 𝙜𝙖𝙢𝙚 𝙖𝙙𝙙𝙤𝙣 𝙩𝙝𝙖𝙩 𝙖𝙙𝙙𝙨 𝙖𝙗𝙤𝙪𝙩 90 𝙥𝙚𝙧𝙘𝙚𝙣𝙩 𝙤𝙛 𝙩𝙝𝙚 𝙥𝙖𝙨𝙩𝙚𝙗𝙞𝙣 𝙩𝙤 𝙖𝙣 𝙚𝙖𝙨𝙮 𝙪𝙨𝙚 𝙛𝙤𝙧𝙢𝙖𝙩. 𝙁𝙞𝙧𝙨𝙩 𝙡𝙞𝙣𝙠 𝙡𝙚𝙖𝙙𝙨 𝙩𝙤 𝙖 𝙧𝙖𝙬 𝙫𝙚𝙧𝙨𝙞𝙤𝙣 𝙩𝙝𝙖𝙩 𝙘𝙖𝙣 𝙗𝙚 𝙪𝙨𝙚𝙙 𝙬𝙞𝙩𝙝𝙤𝙪𝙩 𝙖𝙣 𝙚𝙭𝙩𝙚𝙣𝙨𝙞𝙤𝙣, 𝙣𝙤𝙩 𝙧𝙚𝙘𝙤𝙢𝙢𝙚𝙣𝙙𝙚𝙙. 𝙎𝙚𝙘𝙤𝙣𝙙 𝙡𝙞𝙣𝙠 𝙡𝙚𝙖𝙙𝙨 𝙩𝙤 𝙖𝙣 𝙚𝙭𝙩𝙚𝙣𝙨𝙞𝙤𝙣, 𝙟𝙪𝙨𝙩 𝙛𝙤𝙡𝙡𝙤𝙬 𝙞𝙣𝙨𝙩𝙖𝙡𝙡𝙖𝙩𝙞𝙤𝙣 𝙩𝙪𝙩𝙤𝙧𝙞𝙖𝙡An signed .xpi for FireFox exists on the Discord (one-time installation).
docs.google.com/document/u/1/d/1DfUgy6RfhyGCnCQeU4KW3QDmThdwfAwRsihrQZyLZHs/edit
drive.google.com/drive/folders/1YpScmA5d1_PlECKP_tcOyZRgeBiKK4yD?usp=sharing
 
 
 
//G7: ImprovedStruggle add-on. just trying to make struggling and lockpicking more fun. An signed .xpi for FireFox exists on the Discord (one-time installation).
drive.google.com/drive/folders/1rnGBMKvtbLvzSYN1HkSD7cz3gl-qgb_X?usp=sharing
 
 
 
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//GAME ENCHANCING
 
 
 
//Z1: Unrestrict code. Adding/removing items becomes instant, can place items in blocked regions, so on. Three modes exist
//Mode 1: sub. This mode will preserve gameplay for submissives while still improving it.
//Mode 2: dom. This mode will not preserve gameplay.
//Mode 3: reset. This mode will re-restrict, thereby undoing it.
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
CODES MOVED TO BOTTOM OF PASTEBIN 
 
 
//Z2: Patreon/cheat codes. Can be used when logged in. Have to repeat every login.
//Why?! Because. Patreon donates, gets link. Patreon says: "you, you're my friend, you get it. You, you're random, kiss my ass and you get it. You? Well, I don't like you, so you don't get it." That's wrong. Patch that first, only allow donors to use it and not "donors and who donors say" and this link will stop working I guess, which is fair.
//REMEMBER TO DONATE IF YOU CAN: www.patreon.com/BondageProjects
  function CheatValidate() {return true};
CheatAllow = true;
CheatActivated.push("DoubleReputation");
CheatActivated.push("DoubleSkill");
CheatActivated.push("DoubleMoney");
CheatActivated.push("BlockRandomKidnap");
CheatActivated.push("SkipTrialPeriod");
CheatActivated.push("BlockRandomKidnap");
CheatActivated.push("AutoShowTraits");
CheatActivated.push("NoLoveDecay");
CheatActivated.push("AutoShowTraits");
CheatActivated.push("CantLoseMistress");
CheatActivated.push("FreeCollegeOutfit");
CheatActivated.push("MiniGameBonus");
CheatActivated.push("FreeNPCDress");
CheatActivated.push("ChangeNPCTrait");
CheatActivated.push("DoubleItemSpeed");
 CheatRun();
 
 
 
 
//Z3: Grant use of owner locks, if you have no owner/lover. This will grab an NPC and make them your lover/owner but name them with nothing. Only recommended if you really want no lovers/owners in the club, but still want these types of locks.
1. Find an NPC, any will do.
2. Click on NPC, input in console: 
		var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
		z.Name = "None";
3. Use: PrivatePlayerCollaring();
4. Done! Now relog to make sure changes take effect, and you can use owner locks.
 
 
 
//Z4: Grant use of lover locks, if you have no lover.
1. Find an NPC, any will do.
2. Click on NPC, input in console: 
		var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
		z.Name = "";
3. Use: PrivateStartGirlfriend();//become lover of npc.
4. Done! Now relog to make sure changes take effect, and you can use owner locks.
 
 
 
//Z5: Adds every item, especially hidden/rare items to the shop.
 Asset.forEach(e => { if (e.Value < 0) e.Value = 1; });
 
 
 
//Z6: Ability to hear gag talk.
var SpeechGagLevelLookup = {};
 
 
 
//Z7: Join asylum/college without meeting requirements.
AsylumEntranceIsWearingNurseClothes = function () {return true}
CollegeEntranceIsWearingTennisClothes = function () { return true; }
CollegeEntranceIsWearingCollegeClothes = function () { return true; }
CollegeEntranceIsWearingTennisClothes = function () { return true; }
CollegeEntranceCanGoTeacher = function () { return true; }
 
 
 
//Z8: Code that allows exceeding the text limit on items like wooden sign, custom tag. Does not work on every item. Use code below as one big one.
function InventoryItemMiscWoodenSignLoad() {DynamicDrawLoadFont(InventoryItemMiscWoodenSignFont);
var C = CharacterGetCurrent();var MustRefresh = false;
if (DialogFocusItem.Property == null) DialogFocusItem.Property = {};
if (DialogFocusItem.Property.Text == null && DialogFocusItem.Property.Text2 == null) {
DialogFocusItem.Property.Text = "";DialogFocusItem.Property.Text2 = "";MustRefresh = true;}
if (MustRefresh) {CharacterRefresh(C);ChatRoomCharacterItemUpdate(C, DialogFocusItem.Asset.Group.Name);}
const input1 = ElementCreateInput("WoodenSignText1", "text", DialogFocusItem.Property.Text, "50");
const input2 = ElementCreateInput("WoodenSignText2", "text", DialogFocusItem.Property.Text2, "50");
if (input1) input1.pattern = DynamicDrawTextInputPattern;if (input2) input2.pattern = DynamicDrawTextInputPattern;}
function InventoryItemNeckAccessoriesCustomCollarTagLoad() {
var C = CharacterGetCurrent();var MustRefresh = false;
if (DialogFocusItem.Property == null) DialogFocusItem.Property = {};if (DialogFocusItem.Property.Text == null) {
DialogFocusItem.Property.Text = "Tag";MustRefresh = true;}if (MustRefresh) {CharacterRefresh(C);
ChatRoomCharacterItemUpdate(C, DialogFocusItem.Asset.Group.Name);}
if (!InventoryItemHasEffect(DialogFocusItem, "Lock", true)) {ElementCreateInput("TagText", "text", DialogFocusItem.Property.Text, "30");}}
function InventoryItemNeckAccessoriesElectronicTagLoad() {
var C = CharacterGetCurrent();var MustRefresh = false;
if (DialogFocusItem.Property == null) DialogFocusItem.Property = {};if (DialogFocusItem.Property.Text == null) {
DialogFocusItem.Property.Text = "Tag";MustRefresh = true;}if (MustRefresh) {CharacterRefresh(C);
ChatRoomCharacterItemUpdate(C, DialogFocusItem.Asset.Group.Name);}if (!InventoryItemHasEffect(DialogFocusItem, "Lock", true)) {
ElementCreateInput("TagText", "text", DialogFocusItem.Property.Text, "30");}}
 
 
 
//Z9: Auto kicker.
function kickNewbies(data, days = 1, hours = 12, minutes = 0) { // Change time here. Right now it will kick every account yonger than 1 day and 12 hours
  minutes *= 60000;
  hours *= 3600000;
  days *= 86400000;
  let character = ChatRoomCharacter.find((c) => c.MemberNumber === data.Sender);
  if (data.Content == "ServerEnter" && character.Creation > CurrentTime - days - hours - minutes) {
    ServerSend('ChatRoomAdmin', { MemberNumber: character.MemberNumber, Action: 'Ban' });
  }
}
ServerSocket.on('ChatRoomMessage', kickNewbies);
 
 
 
//Z10: A code that simulations speaking. Moves your mouth when you speak in chat.
var expressionAnimation;var expressionAnimationIndex=0;function RunExpressionAnimationStep() {
CharacterSetFacialExpression(Player, "Mouth", expressionAnimation[expressionAnimationIndex++]);
if(expressionAnimationIndex<expressionAnimation.length) {setTimeout(RunExpressionAnimationStep, 1000);
} else {expressionAnimation=null;}}
function RunExpressionAnimation(list) {if(expressionAnimation) {return;}
expressionAnimation=list;expressionAnimationIndex=0;
expressionAnimationEx=InventoryGet(Player, "Mouth");
if(expressionAnimationEx && expressionAnimationEx.Property && expressionAnimationEx.Property.Expression) {
expressionAnimation[expressionAnimation.length-1]=expressionAnimationEx.Property.Expression;//set last to current
}RunExpressionAnimationStep();}
(typeof OLDtalking !== 'undefined') && (ChatRoomSendChat=OLDtalking); // reset
function NEWtalking(){var msg = ElementValue("InputChat").trim();
if(!msg.startsWith("/")&&!msg.startsWith("*")&&!msg.startsWith("!")) {
if(msg.length > 10) {RunExpressionAnimation([null, "Grin", "Smirk", null, "Grin", "Smirk", null]);
} else {RunExpressionAnimation([null, "Grin", "Smirk", null]);}}OLDtalking();}
var OLDtalking=ChatRoomSendChat;var ChatRoomSendChat=NEWtalking;
 
 
 
//Z11: DUNGEON STUFF
Unfortunately, Pastebin censors things. Such as rope-related words. So, adding is not possible.
The cdes exist on the discord, though
 
 
 
//Z12: Code to set background manually, to whatever you want, including "restricted" backgrounds. Open admin' menu then use.
ChatAdminBackgroundSelect="CollegeTennis"
//List of backgrounds: pastebin.com/N2gpKfCF
 
 
 
//Z13: Adds every hidden background to the current list of backgrounds in admin's panel.
BackgroundsList.push({ Name: "Pandora/Ground/Entrance", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Cell0", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Cell1", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Cell2", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Cell3", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Cell4", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Cell5", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Cell6", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Entrance", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Fork0", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Fork1", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Fork2", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Fork3", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Fork4", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Fork5", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Fork6", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Tunnel0", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Tunnel1", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Tunnel2", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Tunnel3", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Tunnel4", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Tunnel5", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Second/Tunnel6", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Cell0", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Cell1", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Cell2", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Cell3", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Cell4", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Cell5", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Cell6", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Entrance", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Fork0", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Fork1", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Fork2", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Fork3", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Fork4", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Fork5", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Fork6", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Tunnel0", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Tunnel1", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Tunnel2", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Tunnel3", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Tunnel4", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Tunnel5", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Pandora/Underground/Tunnel6", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "AsylumBedroom", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "AsylumEntrance", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "AsylumMeeting", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "AsylumTherapy", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "AmandaIntro", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Bar", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "BoutiqueBack", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Cell", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "CollegeClass", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "CollegeCafeteria", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "CollegeDetention", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "CollegeEntrance", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "CollegeTeacherLounge", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "CollegeTennisPlay", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "CollegeTennis", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "CollegeTheater", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Dressing", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Gambling", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "grey", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "HorseStableLight", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Magic", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "MiddletownSchool", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "MovieStudio", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "/Orig/buhne-dekorativ-kino-276179", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "/Orig/Entrance", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "/Orig/Lounge", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "OutsideCells", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "PaddedCell", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "PaddedCell2", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Prison", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "RhythmGame", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "RhythmGameLoading", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SarahBedroom0", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SarahBedroom1", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SarahBedroom2", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SarahBedroom3", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SarahIntro", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Sheet", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SheetWhite", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "Shop", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SlaveMarket", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SophieIntro", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SchoolHospital", Tag: [BackgroundsTagIndoor] });
BackgroundsList.push({ Name: "SlipperyClassroom", Tag: [BackgroundsTagIndoor] });
ChatCreateBackgroundList = BackgroundsGenerateList(BackgroundsTagList);
 
 
 
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//OTHER
 
 
 
//V1: Every personal setting there is, currently set to Extreme Mode Difficulty. Helps new accounts bypass 7 day wait timer. Unless settings persists relog, have to use every relog.
Player.RestrictionSettings.BypassStruggle = false
Player.RestrictionSettings.SlowImmunity = false
Player.RestrictionSettings.BypassNPCPunishments = false;
//
Player.GameplaySettings.EnableSafeword = false;
Player.GameplaySettings.DisableAutoMaid = true;
Player.GameplaySettings.SensDepChatLog = true;
Player.GameplaySettings.BlindDisableExamine = false;
Player.GameplaySettings.ImmersionLockSetting = true;
GameplaySettings.DisableAutoRemoveLogin = true;
Player.GameplaySettings.OfflineLockedRestrained = true;
//
Player.ImmersionSettings.BlockGaggedOOC = true;
Player.ImmersionSettings.StimulationEvents = true;
Player.ImmersionSettings.ReturnToChatRoom = true;
Player.ImmersionSettings.ReturnToChatRoomAdmin = "";//don't touch
Player.ImmersionSettings.SenseDepMessages = false;
//
Player.ChatSettings.AutoBanBlackList = false;
Player.ChatSettings.AutoBanGhostList = true;
Player.ChatSettings.DisableAnimations = false;
Player.ChatSettings.SearchShowsFullRooms = true;
Player.ChatSettings.SearchFriendsFirst = false;
Player.OnlineSettings.EnableAfkTimer = true;
Player.OnlineSettings.EnableWardrobeIcon = false;
//
Player.OnlineSharedSettings.AllowFullWardrobeAccess = true;
Player.OnlineSharedSettings.BlockBodyCosplay = false;
Player.OnlineSharedSettings.AllowPlayerLeashing = true;
Player.OnlineSharedSettings.DisablePickingLocksOnSelf = false
 
 
 
//V2: Prevent/enable remote use on others (vibrators and such). Select only one line from below.
LogDelete("BlockRemote", "OwnerRule");
LogAdd("BlockRemote", "OwnerRule");InventoryConfiscateRemote();
 
 
 
//V3: Prevent/enable lock use on self. Select only one line from below.
LogDelete("BlockOwnerLockSelf", "OwnerRule");
LogAdd("BlockOwnerLockSelf", "OwnerRule");
 
 
 
//V4: Prevent/enable key for lock use on self. Select only one line from below.
LogDelete("BlockKey", "OwnerRule");
LogAdd("BlockKey", "OwnerRule");InventoryConfiscateKey();
 
 
//V5: Prevent/enable vibrator remote use on self. Select only one line from below.
LogDelete("BlockRemoteSelf", "OwnerRule");
LogAdd("BlockRemoteSelf", "OwnerRule");
 
 
 
//V6: Prevent/enable whisper. Select only one line from below.
LogDelete("BlockWhisper", "OwnerRule");
LogAdd("BlockWhisper", "OwnerRule");ChatRoomTargetMemberNumber = null;
 
 
 
//V7: Prevent/enable wardrobe use. Select only one line from below.
LogDelete("BlockChange", "OwnerRule");//allow change
LogAdd("BlockChange", "OwnerRule", CurrentTime + 3600000);//can set time
 
 
 
//V8: Opens wardrobe, even if locked. Click on the player you want to open it on.  Use below as a single code. Can circumvent permissions.
 ChatRoomChangeClothes();
 
 
//V9: Leaves a conversation had with an NPC, just like that.
DialogLeave();
 
 
 
//V10: A /safeword command that removes whichever item you're zoomed in on, such as arms.
Player.Appearance = Player.Appearance.filter(x => (Player.FocusGroup && Player.FocusGroup.Name) ? x.Asset.Group.Name != 
Player.FocusGroup.Name : true);
ChatRoomCharacterUpdate(Player);
 
 
//V11: A /safeword command that removes everything.
Player.Appearance=Player.Appearance.filter(x => !x.Asset.Group.Name.match(/Item.*/));
ChatRoomCharacterUpdate(Player);
 
 
 
//V12: Leaves a room when trapped. Use below as a single code.
if (CurrentScreen == "ChatRoom") {
ElementRemove("FriendList");
ElementRemove("InputChat");
ElementRemove("TextAreaChatLog");
ChatRoomSetLastChatRoom("");
ServerSend("ChatRoomLeave", "");
CommonSetScreen("Online", "ChatSearch");
OnlineGameName = "";};
if (CurrentScreen == "Cell") {
PrisonLeaveCell();};
 
 
 
//V13: Same as committing self to asylum, except can select amount of time.  Select only one from below.
LogDelete("Committed", "Asylum", CurrentTime + 604800000);//Remove time
LogAdd("Committed", "Asylum", CurrentTime + 604800000);//Add time
 
 
 
//V14: Adds love chastity belt. Click on self/submissive, only works there.  Use below as a single code.
var Front = "Vibe" // "Open" "Closed" "Shock" "Vibe"
var RearLocked = "true"  //  "false"  "true"
var Intensity = 4 // 0-4
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
var x = atob("SW52ZW50b3J5V2Vhcg==");
var A = new Function (x+".apply(null, arguments);");
A(z, "LoveChastityBelt", "ItemPelvis", "#B19354");
z.FocusGroup = AssetGroupGet("Female3DCG", "ItemPelvis");
DialogExtendItem(InventoryGet(z, "ItemPelvis"));
DialogFocusItem.Property.Type = Front;
DialogFocusItem.Property.LockButt = RearLocked;
DialogFocusItem.Property.Intensity = Intensity;
ChatRoomCharacterUpdate(z);
 
 
 
//V15: Just a list of restriction removes that I can't figured out what to do with.
function ManagementWontOwnPlayer(){return false}
function ManagementCanBreakUpLoverNPC(L){return true}
function ManagementWontVisitRoom(){return false}
function ManagementCanBeClubMistress(){return true}
function ManagementCannotBeClubSlaveDominant(){return false}
function ManagementCannotBeClubSlaveOwnerLock(){return false}
function ManagementCannotBeClubSlaveLoverLock(){return false}
function ManagementSarahUnlockQuest(){return (SarahUnlockQuest)}
function ManagementFreeSarah(){return true}
 
 
 
//V16: Adding custom named lovers. Can be named anything. Like an heart emoji or wikipedia link. Even owner.
Click on NPC then use the following to rename them.
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
z.Name = "Name"
//Then use one or both of the following, depending on if you want that name to be a lover/owner:
PrivateStartGirlfriend();//become lover of npc.
PrivateNPCCollaring();//become owner of npc.
 
 
 
//V17: Create custom action messages in chat.
ServerSend("ChatRoomChat", { Content: "Beep", Type: "Action", Dictionary: [{Tag: "Beep", Text: "MESSAGEHERE" }]});
 
 
 
//V18: Color changing code! Can be used to routinely, once every second because that is the limit of the club, to change color.
function ColorChanger() {
setTimeout(function() {ColorChanger()},1000);
var RandomColor = null;
RandomColor = '#'+Math.floor(Math.random()*16777215).toString(16);
InventoryGet(Player, "Eyes").Color = RandomColor
InventoryGet(Player, "Eyes2").Color = RandomColor
ChatRoomCharacterUpdate(Player)};ColorChanger()
 
 
 
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//NPC
 
 
//N1: Changes NPs trait and love status. Does not work on players. Only 6 traits can be used, select 6 or less traits then use.
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
z.Love = 100;//Changes NPCs love. does NOT count as a trait, do not remove but rather change value to desired.
NPCTraitSet(z, "Playful", 100);
NPCTraitSet(z, "Peaceful", 100);
NPCTraitSet(z, "Horny", 100);
NPCTraitSet(z, "Polite", 100);
NPCTraitSet(z, "Dominant", 100);
NPCTraitSet(z, "Violent", 100);
NPCTraitSet(z, "Frigid", 100);
NPCTraitSet(z, "Polite", 100);
NPCTraitSet(z, "Wise", 100);
NPCTraitSet(z, "Serious", 100);
NPCTraitSet(z, "Submissive", 100);
 
 
 
//N2: Select any of the below. Click on character then use. Break via club management. Does not work on players.
PrivatePlayerCollaring();//become submissive of npc.
PrivateStartGirlfriend();//become lover of npc.
PrivateNPCCollaring();//become owner of npc.
 
 
 
//N3: Enable the option to break up with an NPC lover if disabled. Also listed in fixes.
function ManagementCannotBreakUpLoverNPC(L) { return false };
 
 
 
//N4: Ability to add any NPC to hotel room. Relog after using, or crash first time interacting with her. Click on NPC then use.
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
NPCEventAdd(z, "PrivateRoomEntry", CurrentTime);
PrivateAddCharacter(z, null, true);
NPCTraitGenerate(z);
ServerPrivateCharacterSync();
DialogLeave();
 
 
 
//N5: Custom NPC in your hotel room. As lover/friend/other.
1. Find an NPC. Doesn't mater who they are, you'll be changing every aspect of them. Make sure you like their personality, otherwise kick them out and repeat 1.
2. Use the following code on NPC after. Clock on them then use.
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
NPCEventAdd(z, "PrivateRoomEntry", CurrentTime);
PrivateAddCharacter(z, null, true);
NPCTraitGenerate(z);
ServerPrivateCharacterSync();
DialogLeave();
3. Restart then visit NPC in hotel room. Start a dialogue with tem and nuse the following code:
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
CharacterAppearanceLoadCharacter(z);
DialogLeave():
4. After havin designed their appearnace, you shoudl assign their traits.  Click on NPC then use.
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));//must include, select only six traits from below.
NPCTraitSet(z, "Playful", 100);
NPCTraitSet(z, "Peaceful", 100);
NPCTraitSet(z, "Horny", 100);
NPCTraitSet(z, "Polite", 100);
NPCTraitSet(z, "Dominant", 100);
NPCTraitSet(z, "Violent", 100);
NPCTraitSet(z, "Frigid", 100);
NPCTraitSet(z, "Polite", 100);
NPCTraitSet(z, "Wise", 100);
NPCTraitSet(z, "Serious", 100);
NPCTraitSet(z, "Submissive", 100);
5. Now, time to decide if they love you or not instantly. Or if you want to work on that, if you do then ignore this step.
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
z.Love = 100;//change this number with amount.
6. Now, it's time to name your lover. Click on the lover then use.
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
z.Name = "Name"
 
 
 
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//AUDIO:
 
 
 
//A1: List of every audio in the game. Using will demonstrate.
AudioPlayInstantSound("Audio/"+AudioGetFileName("Unlock")+".mp3", 1)
AudioPlayInstantSound("Audio/"+AudioGetFileName("HydraulicLock")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("Shocks")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("HydraulicLock")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("AccessDenied")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("Deflation")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("Inflation")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("FuturisticApply")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("CuffsMetal")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("RopeShort")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("DuctTape")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("ZipTie")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("WoodenCuffs")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("ChainLong")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("Wand")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("SmackSkin1")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("LockSmall")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("Bag")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("BellMedium")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("LockLarge")+".mp3", 1);
AudioPlayInstantSound("Audio/"+AudioGetFileName("Whip2")+".mp3", 1);
 
 
 
//A2: Changes chat beep. Select only one of the following. Change sound as desired.
var NotificationsAudio = new Audio("Audio/"+AudioGetFileName("Unlock")+".mp3", 1);
 
 
 
//A3: Changes friendlist beep sound. Select only one of the following. Change sound as desired.
ServerBeepAudio.src = ("Audio/"+AudioGetFileName("Unlock")+".mp3", 1);
 
 
 
//A4: How to set a different "room entry" and "beep" sound. Game uses the same audio for this, so you'll have to disable "beep upon room entry," then manully.
(function(){ let counter = ChatRoomCharacter.length;
ServerSocket.on('ChatRoomSync', function(data){
let CC;
if(data.Character.length > counter){
AudioPlayInstantSound("Audio/"+AudioGetFileName("Unlock")+".mp3", 1) } 
counter = data.Character.length; }); })();
 
 
 
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//BONDAGECOLLEGE:
//Do not use for BondageClub...
 
 
 
//B1: Collar self (must have collar in inventory).
LeaveIcon = "";
Common_PlayerOwner = CurrentActor;
Common_ActorIsOwner = true;
PlayerLockInventory("Collar");
CurrentTime = CurrentTime + 50000;//can change time to be colored here.
EventSetGenericTimer();
 
 
 
//B2: List of clothes.
PlayerClothes("Naked");
PlayerClothes("Underwear");
PlayerClothes("BlackDress");
PlayerClothes("Tennis");
PlayerClothes("RedBikini");
PlayerClothes("Naked");
PlayerClothes("Clothed");
PlayerClothes("Damsel");
PlayerClothes("Heroine");
PlayerClothes("Villain");
 
 
 
//B3: List of every item.
PlayerAddInventory("Rope", 1);
PlayerAddInventory("Armbinder", 1);
PlayerAddInventory("BallGag", 1);
PlayerAddInventory("ClothGag", 1);
PlayerAddInventory("PantieGag", 1);
PlayerAddInventory("SockGag", 1);
PlayerAddInventory("Blindfold", 1);
PlayerAddInventory("Cuffs", 1);
PlayerAddInventory("CuffsKey", 1);
PlayerAddInventory("TapeGag", 8);
PlayerAddInventory("Collar", 4);
PlayerAddInventory("Crop", 1);
PlayerAddInventory("VibratingEgg", 4);
PlayerAddInventory("ChastityBelt", 4);
PlayerAddInventory("SleepingPill", 1);
PlayerAddInventory("Blindfold", 1);
PlayerAddInventory("MetalSheet", 1);
PlayerAddInventory("RustyHook", 1);
PlayerAddInventory("DoubleOpenGag", 1);
PlayerAddInventory("Manacles", 1);
PlayerAddInventory("ButtocksPlug", 1);//Note, pastebin censorship at work. Remoce ocks from buttocks
 
 
 
//B4: Unlock cheats. Activate cheats by pressing keyboard buttons. Just press a few randoms.
CheatKey();
var CheatAllow = true;
CheatSkill();
CheatInventory();
 
//B5: 𝙇𝙞𝙨𝙩 𝙤𝙛 𝙗𝙪𝙩𝙩𝙤𝙣𝙨 𝙛𝙤𝙧 𝙘𝙝𝙚𝙖𝙩𝙨 𝙖𝙗𝙤𝙫𝙚. 𝘾𝙧𝙚𝙙𝙞𝙩 𝙩𝙤 𝙎𝙚𝙭𝙮.
1: +1 𝙡𝙤𝙫𝙚 𝙛𝙤𝙧 𝙩𝙝𝙚 𝙘𝙪𝙧𝙧𝙚𝙣𝙩 𝙜𝙞𝙧𝙡
2: -1 𝙡𝙤𝙫𝙚 𝙛𝙤𝙧 𝙩𝙝𝙚 𝙘𝙪𝙧𝙧𝙚𝙣𝙩 𝙜𝙞𝙧𝙡 3: +1 𝙨𝙪𝙗𝙢𝙞𝙨𝙨𝙞𝙤𝙣 𝙛𝙤𝙧 𝙩𝙝𝙚 𝙘𝙪𝙧𝙧𝙚𝙣𝙩 𝙜𝙞𝙧𝙡
4: -1 𝙨𝙪𝙗𝙢𝙞𝙨𝙨𝙞𝙤𝙣 𝙛𝙤𝙧 𝙩𝙝𝙚 𝙘𝙪𝙧𝙧𝙚𝙣𝙩 𝙜𝙞𝙧𝙡 5: +1 𝙨𝙠𝙞𝙡𝙡 𝙡𝙚𝙫𝙚𝙡 𝙞𝙣 𝘼𝙧𝙩𝙨
6: +1 𝙨𝙠𝙞𝙡𝙡 𝙡𝙚𝙫𝙚𝙡 𝙞𝙣 𝙁𝙞𝙜𝙝𝙩𝙞𝙣𝙜 7: +1 𝙨𝙠𝙞𝙡𝙡 𝙡𝙚𝙫𝙚𝙡 𝙞𝙣 𝙍𝙤𝙥𝙚 𝙈𝙖𝙨𝙩𝙚𝙧𝙮
8: +1 𝙨𝙠𝙞𝙡𝙡 𝙡𝙚𝙫𝙚𝙡 𝙞𝙣 𝙎𝙚𝙙𝙪𝙘𝙩𝙞𝙤𝙣 9: +1 𝙨𝙠𝙞𝙡𝙡 𝙡𝙚𝙫𝙚𝙡 𝙞𝙣 𝙎𝙥𝙤𝙧𝙩𝙨
*: 𝘼𝙪𝙩𝙤𝙢𝙖𝙩𝙞𝙘𝙖𝙡𝙡𝙮 𝙬𝙞𝙣 𝙩𝙝𝙚 𝙘𝙪𝙧𝙧𝙚𝙣𝙩 𝙛𝙞𝙜𝙝𝙩 𝙤𝙧 𝙧𝙖𝙘𝙚 *: 𝙍𝙚𝙢𝙤𝙫𝙚 𝙖𝙡𝙡 𝙧𝙚𝙨𝙩𝙧𝙖𝙞𝙣𝙨 𝙡𝙤𝙘𝙠𝙚𝙙 𝙤𝙣 𝙮𝙤𝙪 (𝙪𝙨𝙚 𝙞𝙩 𝙞𝙣 𝙮𝙤𝙪𝙧 𝙢𝙖𝙞𝙣 𝙙𝙤𝙧𝙢 𝙧𝙤𝙤𝙢 𝙨𝙘𝙧𝙚𝙚𝙣)
+: 𝙎𝙩𝙚𝙥 𝙛𝙤𝙧𝙬𝙖𝙧𝙙 15 𝙢𝙞𝙣𝙪𝙩𝙚𝙨 𝙞𝙣 𝙩𝙞𝙢𝙚 -: 𝙎𝙩𝙚𝙥 𝙗𝙖𝙘𝙠𝙬𝙖𝙧𝙙 15 𝙢𝙞𝙣𝙪𝙩𝙚𝙨 𝙞𝙣 𝙩𝙞𝙢𝙚
𝘼: +1 𝘼𝙧𝙢𝙗𝙞𝙣𝙙𝙚𝙧 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮 𝘽: +1 𝘽𝙖𝙡𝙡 𝙂𝙖𝙜 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮
𝘾: +1 𝘾𝙪𝙛𝙛𝙨 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮 𝙁: +1 𝘾𝙝𝙖𝙨𝙩𝙞𝙩𝙮 𝘽𝙚𝙡𝙩 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮
𝙂: +1 𝘾𝙡𝙤𝙩𝙝 𝙂𝙖𝙜 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮 𝙆: +1 𝘾𝙪𝙛𝙛𝙨 𝙆𝙚𝙮 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮 
𝙇: +1 𝘾𝙤𝙡𝙡𝙖𝙧 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮 𝙋: +1 𝘾𝙧𝙤𝙥 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮
𝙍: +1 𝙍𝙤𝙥𝙚 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮 𝙎: +1 𝙎𝙡𝙚𝙚𝙥𝙞𝙣𝙜 𝙋𝙞𝙡𝙡 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮
𝙏: +1 𝙏𝙖𝙥𝙚 𝙂𝙖𝙜 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮 𝙑: +1 𝙑𝙞𝙗𝙧𝙖𝙩𝙞𝙣𝙜 𝙀𝙜𝙜 𝙞𝙣 𝙞𝙣𝙫𝙚𝙣𝙩𝙤𝙧𝙮
 
 
 
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//FIX
 
 
 
//F1: A /safeword command that removes whichever item you're zoomed in on, such as arms.
Player.Appearance = Player.Appearance.filter(x => (Player.FocusGroup && Player.FocusGroup.Name) ? x.Asset.Group.Name != 
Player.FocusGroup.Name : true);
ChatRoomCharacterUpdate(Player);
 
 
//F2: A /safeword command that removes everything.
Player.Appearance=Player.Appearance.filter(x => !x.Asset.Group.Name.match(/Item.*/));
ChatRoomCharacterUpdate(Player);
 
 
 
//F3: Allows a submissive to break from their owner, ignores extreme mode prevention. Use within chat-room. Also exists in Player Change.
ManagementReleaseFromOwner();
 
 
 
//F4: Enable the option to break up with an NPC lover if disabled. Also listed in NPC Status.
function ManagementCannotBreakUpLoverNPC(L) { return false };
 
 
 
//F5: The following fixes reputation errors. Replace X with exact value of the ruined code. Use: Player.Skill to get a list.
DialogSetReputation("X", 0);
 
 
 
//F6: The following fixces skill errors. Use: Player.Reputation to get a list.
Player.Skill.length = 0
var X = "10"//change this number with desired value, or delete this line and manually replace X below. Range: 0-10.
SkillChange("SelfBondage", X);
SkillChange("Willpower", X);
SkillChange("Evasion", X);
SkillChange("Bondage", X);
SkillChange("Dressage", X);
 
 
 
//F7: If you're hopelessly being dragged back into the same room, unable to leave it, use this then try to leave.
ChatRoomSetLastChatRoom("");
 
 
 
//F8: A fix for in the event LARP battle mode, in chat-room, crashes when selecting role. Might reset level, use only if glitched.
Player.Game = undefined;
 
 
 
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
///ADVICE and GAME TUTORIAL:
 
 
 
//T1: Getting wardrobe.
1. Get a wardrobe to store outfits: Visit hotel room (eye symbol), buy it, buy wardrobe within.
 
 
 
//T2: Buy stuff from shop easier.
2. Select "can I ask you some questions">"Can you show me everything I don't have?"
 
 
 
//T3: Creating an access list in your private room, allowing only authorized people to join.
1. Set room to public, locked.
2. Add the players you want to be able to join to admin' list.
3. Admin people can join locked room, also lets others see the room name in friend's list but never join unless also an admin.
 
 
 
//T4: What is the evasion bonus for struggle assist? Credit Aio.
Helper's evasion / 2 + 1, if the helper's free.
Above value can get / 1.5 for bound arms,
same for hands, and / 1.25 if helper can't talk.
 
 
 
//T5: What are waiting times for npc's for sub/dom trial?
3 days if playful (looking at you Sarah) / 2 weeks if serious / week otherwise
 
 
 
//T6: Fix for disconnects in inactive tabs. Credit Shyness.
If someone in BC experiences disconnects in inactive tabs in any chromium-based browser, try to disable intensive wake up throttling setting.
Type the following in the address bar: chrome://flags/#intensive-wake-up-throttling.
Select Disabled next to the Throttle Javascript timers in background option.
 
 
 
 //////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//CODE EXAMPLES:
 
 
 
//E1: Preferred targeting method. This one is preferred as name does not need to be exact.
var targetname = "namehere"
var targetfinder = new RegExp('^'+targetname+'', 'i');
var target = ChatRoomCharacter.filter(A => (A.Name.match(targetfinder)));
console.log(target[0]);
 
 
 
//E2: Alternative targeting methid. First one is preferred.:
var name = "NAMEHERE";
var target = Character.find(c => c.Name === name); 
InventoryGet(target, "Eyes");//grabs details of target
 
 
 
//E3: Alternative targeting method (first one is preferred):
var target = Character.filter(A => (A.Name.match("NAMEHERE")));
ChatRoomTargetMemberNumber = target.MemberNumber;
 
 
 
//E4: Console logging example.
for(var i=0; i<10; i++) {
  console.log("current i is: "+i);
}
 
 
 
//E5: random color applied on eyes example.
var RandomColor = null;
RandomColor = '#'+Math.floor(Math.random()*16777215).toString(16);
InventoryGet(Player, "Eyes").Color = RandomColor;
InventoryGet(Player, "Eyes2").Color = RandomColor;
ChatRoomCharacterUpdate(Player);
 
 
 
//E6: Property/Modular item modify. An item has properties at time . For example, cloth gag's properties is how it's tied, cleave, over nose, so on. Here's the code to modify this. First, wear a cloth gag in the left mouth slot. Then, use one of the below. Two are included because if the first fails, the second might work.
InventoryGet(Player, "ItemMouth").Property.Type = "Cleave";
InventoryGet(Player, "ItemMouth").Property = [Type: "Cleave"];
 
 
 
//E7: looping timer example.
function Test() {
setTimeout(function() {Test()},1000);//fires every second, 10000 is 10 seconds, so on.
console.log("test");
};Test()
 
 
 
//E8: On/Off switch in variable form.
if (this.IsOn == undefined || this.IsOn == false) {
IsOn = true;
console.log("online")
} else {
IsOn = false;
console.log("offline")}
 
 
 
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//RETIRED CODE:
//Note: A historical reference of abandoned codes. Most will not work.
 
//Note: Still works, but a superior code has been chosen in its place.
 Code that allows exceeding the text limit on items like wooden sign, custom tag. Does not work on every item. Click on player, then the item slot you want to change. Then use code.
var z = eval(atob("Q3VycmVudENoYXJhY3Rlcg=="));
z.FocusGroup = AssetGroupGet("Female3DCG", z.FocusGroup.Name);
DialogExtendItem(InventoryGet(z, z.FocusGroup.Name));
DialogFocusItem.Property.Text = "Write"//Texthere
//<-- remove if item supports two DialogFocusItem.Property.Text2 = "Write"//Texthere
ChatRoomCharacterUpdate(z);
 
//Note: The following fixes reputation errors.  Use below as a single code.
for (var R = 0; R < Player.Reputation.length; R++) {
var ReputationCheck  = Player.Reputation[R].Type;
switch(ReputationCheck) {case "Dominant" : break; case "Maid" : break; case "Kidnap" : break; case "Asylum" : break;  case "LARP" : break; case "Gambling" : break; case "ABDL" : break; default :  Player.Reputation.splice(R, 1); R--; ServerPlayerSync(); break;}}
 
//Note: The following fixes skill errors.  Use below as a single code.
for (var S = 0; S < Player.Skill.length; S++) {
var SkillCheck  = Player.Skill[S].Type;
switch(SkillCheck) { case "None" :break; case "Bondage" :break; case "SelfBondage" :break; case "Evasion" :break;case "Willpower" :break; case "Dressage" : break;default :Player.Skill.splice(S, 1); S--; ServerPlayerSync();break;}}
 
 
//Note: Extends biography 1k limit.  Use below as a single code.
function OnlineProfileLoad() {
ElementRemove("DescriptionInput");
ElementCreateTextArea("DescriptionInput");
var DescriptionInput = document.getElementById("DescriptionInput");
DescriptionInput.setAttribute("maxlength", 10000);
DescriptionInput.value = (InformationSheetSelection.Description != null) ? InformationSheetSelection.Description : "";
if (InformationSheetSelection.ID != 0) DescriptionInput.setAttribute("readonly", "readonly");
}function OnlineProfileExit(Save) {if ((InformationSheetSelection.ID == 0) && (InformationSheetSelection.Description != ElementValue("DescriptionInput").trim()) && Save) {
InformationSheetSelection.Description = ElementValue("DescriptionInput").trim().substr(0, 10000);
ServerSend("AccountUpdate", { Description: InformationSheetSelection.Description });
ChatRoomCharacterUpdate(InformationSheetSelection);}
ElementRemove("DescriptionInput");CommonSetScreen("Character", "InformationSheet");}
 
 
//Note: Code to exceed 250 limit characters on chat, to 500.
document.getElementById("InputChat").setAttribute("maxLength", 1000);//increase chat length
 
// This will disable it
ServerSocket.off('ChatRoomMessage', kickNewbies);
 
//Note: Auto kicker. Kicks all accounts younger than 2 days. 
function AutoKick() {
setTimeout(function() {AutoKick()}, 5000);
if (ChatRoomCharacter[0].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[0].MemberNumber, Action: "Ban" })}
else if (ChatRoomCharacter[1].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[1].MemberNumber, Action: "Ban" })}
else if (ChatRoomCharacter[2].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[2].MemberNumber, Action: "Ban" })}
else if (ChatRoomCharacter[3].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[3].MemberNumber, Action: "Ban" })}
else if (ChatRoomCharacter[4].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[4].MemberNumber, Action: "Ban" })}
else if (ChatRoomCharacter[5].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[5].MemberNumber, Action: "Ban" })}
else if (ChatRoomCharacter[6].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[6].MemberNumber, Action: "Ban" })}
else if (ChatRoomCharacter[7].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[7].MemberNumber, Action: "Ban" })}
else if (ChatRoomCharacter[8].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[8].MemberNumber, Action: "Ban" })}
else if (ChatRoomCharacter[9].Creation > CurrentTime-0000500000000 ) { ServerSend("ChatRoomAdmin", { MemberNumber: ChatRoomCharacter[9].MemberNumber, Action: "Ban" })}
} setTimeout(function() {AutoKick()}, 5000);
 
//Note: Original room checker code. Proved faulty.
ChatRoomSpace = ""//Leave as is when searching club/larp. Replace "" with "Asylum" or "Hidden" if desired.
CommonSetScreen("Online", "ChatSearch");
ChatRoomSetLastChatRoom("");
document.getElementById("InputChat").style.display = "none";
document.getElementById("TextAreaChatLog").style.display = "none";
setTimeout(function() {
    CommonSetScreen("Online", "ChatRoom");
    document.getElementById("InputChat").style.display = "inline";
    document.getElementById("TextAreaChatLog").style.display = "inline";
}, 15000);//Will be returned in 15 seconds.
 
//Note: Allows you to hightlight certain words in chat to make it easier to see them.
 var highlightstrings = ["word", "Word"];
(typeof oldChatRoomHTMLEntities !== 'undefined') && (ChatRoomHTMLEntities=oldChatRoomHTMLEntities);
function newChatRoomHTMLEntities(str) { var ret=String(str).replace(/&/g, '&amp;')
.replace(/</g, '<').replace(/>/g, '>')
.replace(/"/g, '&quot;');
highlightstrings.forEach(function(e) { ret=ret.replace(new RegExp('\\b('+e+')\\b'),"<b>$1</b>"); });
return ret; }
var oldChatRoomHTMLEntities=ChatRoomHTMLEntities;
var ChatRoomHTMLEntities=newChatRoomHTMLEntities;
 
 
 
 
//Note: ROOMSPACESEARCHER. This must be used from within a chat room. You will be returned 15 seconds after using if not choosing a room. Can change the var Place below to mean "asylum" or "club."
var Place = "club"
//IGNORE BELOW. Above, is failsafe now. If you don't search for "asylum" then it's always club.
if (Place == "Asylum" || Place == "asylum") {
setTimeout(function() {ChatRoomSpace = "Asylum";ChatSearchLeaveRoom = "AsylumEntrance";ChatSearchBackground = "AsylumEntrance";
ChatCreateBackgroundList = BackgroundsTagAsylum;CommonSetScreen("Online", "ChatSearch");ChatRoomSetLastChatRoom("");
document.getElementById("InputChat").style.display = "none";document.getElementById("TextAreaChatLog").style.display = "none";
}, 3000);
setTimeout(function() {CommonSetScreen("Online", "ChatRoom");document.getElementById("InputChat").style.display = "inline";
document.getElementById("TextAreaChatLog").style.display = "inline";}, 15000);}
else {setTimeout(function() {ChatRoomSpace = "";ChatSearchLeaveRoom = "MainHall";ChatSearchBackground = "Introduction";
ChatCreateBackgroundList = null;CommonSetScreen("Online", "ChatSearch");ChatRoomSetLastChatRoom("");
document.getElementById("InputChat").style.display = "none";document.getElementById("TextAreaChatLog").style.display = "none";
}, 3000);setTimeout(function() {CommonSetScreen("Online", "ChatRoom");document.getElementById("InputChat").style.display = "inline";
document.getElementById("TextAreaChatLog").style.display = "inline";}, 15000);}
 
//Note: ASYLUMSEARCHER. If used within a chatroom, will leave. Can join asylum rooms and not be a nurse/patient. Recommend using code below this one rather.
ChatRoomSpace = "Asylum";ChatSearchLeaveRoom = "AsylumEntrance";
ServerSend("ChatRoomLeave", "");ChatRoomClearAllElements()
ChatSearchBackground = "AsylumEntrance";ChatCreateBackgroundList = BackgroundsTagAsylum;
CommonSetScreen("Online", "ChatSearch");ChatRoomSetLastChatRoom("")
/////////////////////////////////////////////////////////////////////////////////////
 
//Note: UNRESTRICT CODE HARDCORE. Not suitable for submissives Removes restrictions from the game. Allowing one to put items beneath clothes, use hidden items like Sarah's shackles and maid drink tray, and all blocks. Safe to be used by sub/dom alike, to enrich roleplay.
Player.CanInteract = function () { return true; }
Player.CanWalk = function () { return true; }
Player.CanTalk = function () { return true; }
Player.IsPlugged = function () { return false; }
Player.IsVulvaChaste = function () { return false; }
Player.CanKneel = function () { return true; }
Player.GetBlindLevel = function () { return false; }
Player.CanChange  = function () { return true; }
InventoryGroupIsBlocked  = function (C, GroupName) { return false; }
InventoryPrerequisiteMessage    = function (C, Prerequisit) { return ""; }
Player.GameplaySettings.BlindDisableExamine = false;
Player.Inventory.forEach(item => item.Asset.Enable = true);
Player.Inventory.forEach(item => item.Asset.Wear = true);
DialogHasKey = function (C, Item) {return true}
StruggleLockPickProgressStart = function (C, Item) {
InventoryUnlock(CurrentCharacter, CurrentCharacter.FocusGroup.Name);
ChatRoomCharacterItemUpdate(CurrentCharacter, CurrentCharacter.FocusGroup.Name);
DialogLeave()}
StruggleStrengthStart = function (C, PrevItem, NextItem) {
StruggleProgress = 200;
StruggleProgressPrevItem = PrevItem;
StruggleProgressNextItem = NextItem;
if ((PrevItem && PrevItem.Asset) || (NextItem && NextItem.Asset)) {
var AudioFile = (NextItem && NextItem.Asset) ? NextItem.Asset.Audio : PrevItem.Asset.Audio;
if (AudioFile != null) AudioDialogStart("Audio/" + AudioGetFileName(AudioFile) + ".mp3");
}}
 
//Note: UNRESTRICT CODE FOR SUBMISSIVES. 
InventoryGroupIsBlocked  = function (C, GroupName) { return false; }
InventoryPrerequisiteMessage    = function (C, Prerequisit) { return ""; }
Player.GameplaySettings.BlindDisableExamine = false;
Player.Inventory.forEach(item => item.Asset.Enable = true);
Player.Inventory.forEach(item => item.Asset.Wear = true);
ChatSearchMuffle = function (Text) {}
StruggleStrengthStart = function (C, PrevItem, NextItem) {
var StruggleDiff = StruggleStrengthGetDifficulty(C, PrevItem, NextItem);
var S = StruggleDiff.difficulty;
if ((PrevItem && PrevItem.Asset) || (NextItem && NextItem.Asset)) {
var AudioFile = (NextItem && NextItem.Asset) ? NextItem.Asset.Audio : PrevItem.Asset.Audio;
if (AudioFile != null) AudioDialogStart("Audio/" + AudioGetFileName(AudioFile) + ".mp3");}
if (Player.CanInteract()) {StruggleProgress = 200;StruggleProgressPrevItem = PrevItem;
StruggleProgressNextItem = NextItem;}
else {StruggleProgress = 0;StruggleProgressAuto = StruggleDiff.auto;
StruggleProgressPrevItem = PrevItem;StruggleProgressNextItem = NextItem;
StruggleProgressOperation = StruggleProgressGetOperation(C, PrevItem, NextItem);
StruggleProgressSkill = StruggleDiff.timer;StruggleProgressChallenge = S * -1;
StruggleProgressLastKeyPress = 0;StruggleProgressStruggleCount = 0;
DialogItemToLock = null;DialogMenuButtonBuild(C);
if ((StruggleProgressAuto < 0) && Player.CanInteract() && (PrevItem == null)) StruggleProgressAuto = 0;
if ((StruggleProgressAuto < 0) && Player.CanInteract() && (PrevItem != null) && (!InventoryItemHasEffect(PrevItem, "Lock", true) || DialogCanUnlock(C, PrevItem)) && !InventoryItemHasEffect(PrevItem, "Mounted", true)) StruggleProgressAuto = 0;
DialogAllowBlush = ((StruggleProgressAuto < 0) && (StruggleProgressChallenge > 0) && (C.ID == 0) && ((InventoryGet(C, "Blush") == null) || (InventoryGet(C, "Blush").Property == null) || (InventoryGet(C, "Blush").Property.Expression == null)));
DialogAllowEyebrows = ((StruggleProgressAuto < 0) && (StruggleProgressChallenge > 0) && (C.ID == 0) && ((InventoryGet(C, "Eyebrows") == null) || (InventoryGet(C, "Eyebrows").Property == null) || (InventoryGet(C, "Eyebrows").Property.Expression == null)));
DialogAllowFluids = ((StruggleProgressAuto < 0) && (StruggleProgressChallenge > 0) && (C.ID == 0) && ((InventoryGet(C, "Fluids") == null) || (InventoryGet(C, "Fluids").Property == null) || (InventoryGet(C, "Fluids").Property.Expression == null)));}}
StruggleProgressStart = function (C, PrevItem, NextItem) {
if (InventoryGet(CurrentCharacter, CurrentCharacter.FocusGroup.Name) == null) {
if (C != Player || PrevItem == null || ((PrevItem != null) && (!InventoryItemHasEffect(PrevItem, "Lock", true) || DialogCanUnlock(C, PrevItem)) && ((Player.CanInteract() && !InventoryItemHasEffect(PrevItem, "Mounted", true)) || StruggleStrengthGetDifficulty(C, PrevItem, NextItem).auto >= 0))) {
StruggleProgressCurrentMinigame = "Strength";
StruggleStrengthStart(C, PrevItem, NextItem);}}
else if (Player.CanInteract()) {
ServerSend("ChatRoomChat", { Content: "Beep", Type: "Action", Dictionary: [{Tag: "Beep", Text: Player.Name+" removes the "+InventoryGet(CurrentCharacter, CurrentCharacter.FocusGroup.Name).Asset.Name+" from "+CurrentCharacter.Name+"'s "+CurrentCharacter.FocusGroup.Name }]});InventoryUnlock(CurrentCharacter, CurrentCharacter.FocusGroup.Name);
InventoryRemove(CurrentCharacter, CurrentCharacter.FocusGroup.Name);ChatRoomCharacterItemUpdate(CurrentCharacter, CurrentCharacter.FocusGroup.Name);}
else {StruggleProgressChoosePrevItem = PrevItem;StruggleProgressChooseNextItem = NextItem;StruggleProgressCurrentMinigame = "";StruggleProgress = 0;DialogMenuButtonBuild(Player);StruggleStrengthStart(Player, StruggleProgressChoosePrevItem, StruggleProgressChooseNextItem);}}
 
 
 
//RESTRICT CODE. Tries to undo the unrestrict, not completely but mostly.
Player.CanInteract = function () { return (this.Effect.indexOf("Block") < 0)}
Player.CanTalk = function () {
(this.Effect.indexOf("GagVeryLight") < 0) &&
(this.Effect.indexOf("GagLight") < 0) &&
(this.Effect.indexOf("GagEasy") < 0) &&
(this.Effect.indexOf("GagNormal") < 0) &&
(this.Effect.indexOf("GagMedium") < 0) &&
(this.Effect.indexOf("GagHeavy") < 0) &&
(this.Effect.indexOf("GagVeryHeavy") < 0) &&
(this.Effect.indexOf("GagTotal") < 0) &&
(this.Effect.indexOf("GagTotal2") < 0) &&
(this.Effect.indexOf("GagTotal3") < 0) &&
(this.Effect.indexOf("GagTotal4") < 0)}
ChatSearchMuffle = function (Text) {
let ret = Text;
if (Player.ImmersionSettings && Player.ImmersionSettings.ChatRoomMuffle && Player.GetBlindLevel() > 0) {
ret = SpeechGarbleByGagLevel(Player.GetBlindLevel() * Player.GetBlindLevel(), Text, true);
if (ret.length == 0)return "...";return ret;}return ret;}
Player.CanWalk = function () { return (
(this.Effect.indexOf("Freeze") < 0) &&
(this.Effect.indexOf("Tethered") < 0) &&
((this.Pose == null) || (this.Pose.indexOf("Kneel") < 0) || (this.Effect.indexOf("KneelFreeze") < 0)))}
Player.IsPlugged = function () { return (this.Effect.indexOf("IsPlugged") >= 0)}
Player.IsVulvaChaste = function () { return (this.Effect.indexOf("Chaste") >= 0)}
Player.CanKneel = function () { return CharacterCanKneel(this)}
Player.GetBlindLevel = function (eyesOnly = false) { 
let blindLevel = 0;
const eyes1 = InventoryGet(this, "Eyes");
const eyes2 = InventoryGet(this, "Eyes2");
if (eyes1.Property && eyes1.Property.Expression && eyes2.Property && eyes2.Property.Expression) {
if ((eyes1.Property.Expression === "Closed") && (eyes2.Property.Expression === "Closed")) {
blindLevel += DialogFacialExpressionsSelectedBlindnessLevel;}}}
 Player.CanChange  = function (Pose) { return CharacterCanChangeToPose(this, Pose) }
InventoryGroupIsBlocked = function (C, GroupName, Activity) {
	if (InventoryGroupIsBlockedForCharacter(C, GroupName, Activity)) return true;
	if ((C.ID != 0) && Player.IsEnclose()) return true;
	return false;}
InventoryPrerequisiteMessage    = function (C, Prerequisit) { return ""; }//too long to restore
Player.GameplaySettings.BlindDisableExamine = false;//no point
Player.Inventory.forEach(item => item.Asset.Enable = true);//can't be
Player.Inventory.forEach(item => item.Asset.Wear = true);//can't be
DialogHasKey = function (C, Item) {
if (InventoryGetItemProperty(Item, "SelfUnlock") == false && (!Player.CanInteract() || C.ID == 0)) return false;
if (C.IsOwnedByPlayer() && InventoryAvailable(Player, "OwnerPadlockKey", "ItemMisc") && Item.Asset.Enable) return true;
const lock = InventoryGetLock(Item);
if (C.IsLoverOfPlayer() && InventoryAvailable(Player, "LoversPadlockKey", "ItemMisc") && Item.Asset.Enable && Item.Property && Item.Property.LockedBy && !Item.Property.LockedBy.startsWith("Owner")) return true;
if (lock && lock.Asset.ExclusiveUnlock && ((!Item.Property.MemberNumberListKeys && Item.Property.LockMemberNumber != Player.MemberNumber) || (Item.Property.MemberNumberListKeys && CommonConvertStringToArray("" + Item.Property.MemberNumberListKeys).indexOf(Player.MemberNumber) < 0))) return false;
if (lock && lock.Asset.ExclusiveUnlock) return true;
var UnlockName = "Unlock-" + Item.Asset.Name;
if ((Item.Property != null) && (Item.Property.LockedBy != null)) UnlockName = "Unlock-" + Item.Property.LockedBy;
for (let I = 0; I < Player.Inventory.length; I++)
if (InventoryItemHasEffect(Player.Inventory[I], UnlockName)) {
if (lock != null) {if (lock.Asset.LoverOnly && !C.IsLoverOfPlayer()) return false;
if (lock.Asset.OwnerOnly && !C.IsOwnedByPlayer()) return false;
return true;} else return true;}return false;}
 StruggleStrengthStart = function (C, PrevItem, NextItem) {
var StruggleDiff = StruggleStrengthGetDifficulty(C, PrevItem, NextItem);
var S = StruggleDiff.difficulty;
if ((PrevItem && PrevItem.Asset) || (NextItem && NextItem.Asset)) {
var AudioFile = (NextItem && NextItem.Asset) ? NextItem.Asset.Audio : PrevItem.Asset.Audio;
if (AudioFile != null) AudioDialogStart("Audio/" + AudioGetFileName(AudioFile) + ".mp3");}
if (Player.CanInteract()) {StruggleProgress = 200;StruggleProgressPrevItem = PrevItem;
StruggleProgressNextItem = NextItem;}
else {StruggleProgress = 0;StruggleProgressAuto = StruggleDiff.auto;
StruggleProgressPrevItem = PrevItem;StruggleProgressNextItem = NextItem;
StruggleProgressOperation = StruggleProgressGetOperation(C, PrevItem, NextItem);
StruggleProgressSkill = StruggleDiff.timer;StruggleProgressChallenge = S * -1;
StruggleProgressLastKeyPress = 0;StruggleProgressStruggleCount = 0;
DialogItemToLock = null;DialogMenuButtonBuild(C);
if ((StruggleProgressAuto < 0) && Player.CanInteract() && (PrevItem == null)) StruggleProgressAuto = 0;
if ((StruggleProgressAuto < 0) && Player.CanInteract() && (PrevItem != null) && (!InventoryItemHasEffect(PrevItem, "Lock", true) || DialogCanUnlock(C, PrevItem)) && !InventoryItemHasEffect(PrevItem, "Mounted", true)) StruggleProgressAuto = 0;
DialogAllowBlush = ((StruggleProgressAuto < 0) && (StruggleProgressChallenge > 0) && (C.ID == 0) && ((InventoryGet(C, "Blush") == null) || (InventoryGet(C, "Blush").Property == null) || (InventoryGet(C, "Blush").Property.Expression == null)));
DialogAllowEyebrows = ((StruggleProgressAuto < 0) && (StruggleProgressChallenge > 0) && (C.ID == 0) && ((InventoryGet(C, "Eyebrows") == null) || (InventoryGet(C, "Eyebrows").Property == null) || (InventoryGet(C, "Eyebrows").Property.Expression == null)));
DialogAllowFluids = ((StruggleProgressAuto < 0) && (StruggleProgressChallenge > 0) && (C.ID == 0) && ((InventoryGet(C, "Fluids") == null) || (InventoryGet(C, "Fluids").Property == null) || (InventoryGet(C, "Fluids").Property.Expression == null)));}}
StruggleProgressStart = function (C, PrevItem, NextItem) {
if (InventoryGet(CurrentCharacter, CurrentCharacter.FocusGroup.Name) == null) {
if (C != Player || PrevItem == null || ((PrevItem != null) && (!InventoryItemHasEffect(PrevItem, "Lock", true) || DialogCanUnlock(C, PrevItem)) && ((Player.CanInteract() && !InventoryItemHasEffect(PrevItem, "Mounted", true)) || StruggleStrengthGetDifficulty(C, PrevItem, NextItem).auto >= 0))) {
StruggleProgressCurrentMinigame = "Strength";
StruggleStrengthStart(C, PrevItem, NextItem);}}
else if (Player.CanInteract()) {
ServerSend("ChatRoomChat", { Content: "Beep", Type: "Action", Dictionary: [{Tag: "Beep", Text: Player.Name+" removes the "+InventoryGet(CurrentCharacter, CurrentCharacter.FocusGroup.Name).Asset.Name+" from "+CurrentCharacter.Name+"'s "+CurrentCharacter.FocusGroup.Name }]});InventoryUnlock(CurrentCharacter, CurrentCharacter.FocusGroup.Name);
InventoryRemove(CurrentCharacter, CurrentCharacter.FocusGroup.Name);ChatRoomCharacterItemUpdate(CurrentCharacter, CurrentCharacter.FocusGroup.Name);}
else {StruggleProgressChoosePrevItem = PrevItem;StruggleProgressChooseNextItem = NextItem;StruggleProgressCurrentMinigame = "";StruggleProgress = 0;DialogMenuButtonBuild(Player);StruggleStrengthStart(Player, StruggleProgressChoosePrevItem, StruggleProgressChooseNextItem);}}
function StruggleLockPickProgressStart(C, Item) {
StruggleLockPickArousalText = "";StruggleLockPickArousalTick = 0;if (Item) {StruggleLockPickItem = Item;}
var lock = InventoryGetLock(Item);var LockRating = 1;var LockPickingImpossible = false;if (Item != null && lock) {
var BondageLevel = Item.Difficulty - Item.Asset.Difficulty;var S = 0;
S = S + SkillGetWithRatio("LockPicking");if (lock.Asset.PickDifficulty && lock.Asset.PickDifficulty > 0) {
S = S - lock.Asset.PickDifficulty;LockRating = lock.Asset.PickDifficulty;}
if (Player.IsEnclose() || Player.IsMounted()) S = S - 2;if (!Player.CanInteract() && (Item != null)) {
if (InventoryItemHasEffect(Item, "NotSelfPickable", true)){S = S - 50;LockPickingImpossible = true;}else {
if (InventoryItemHasEffect(InventoryGet(Player, "ItemArms"), "Block", true)) {
if (Item.Asset.Group.Name != "ItemArms" && Item.Asset.Group.Name != "ItemHands") S = S - 50;else S = S - 2;}
if (InventoryItemHasEffect(InventoryGet(Player, "ItemHands"), "Block", true)) {
if (!LogQuery("KeyDeposit", "Cell") && DialogHasKey(Player, Item)) S = S - 4;else S = S - 50;}if (S < -6) {
LockPickingImpossible = true;}if (!C.CanTalk()) S = S - 1;
if (InventoryItemHasEffect(InventoryGet(Player, "ItemLegs"), "Block", true)) S = S - 1;
if (InventoryItemHasEffect(InventoryGet(Player, "ItemFeet"), "Block", true)) S = S - 1;
if (InventoryGroupIsBlocked(Player, "ItemFeet")) S = S - 1;
if (Player.IsBlind()) S = S - 1;if (Player.GetDeafLevel() > 0) S = S - Math.Ceiling(Player.GetDeafLevel()/2);}}
var NumPins = 4;if (LockRating >= 6) NumPins += 2;if (LockRating >= 8) NumPins += 1;
if (LockRating >= 10) NumPins += 1;if (LockRating >= 11) NumPins += 2;
StruggleLockPickOrder = [];StruggleLockPickSet = [];StruggleLockPickSetFalse = [];StruggleLockPickOffset = [];
StruggleLockPickOffsetTarget = [];StruggleLockPickImpossiblePins = [];StruggleLockPickProgressItem = Item;
StruggleLockPickProgressOperation = StruggleLockPickProgressGetOperation(C, Item);
StruggleLockPickProgressSkill = Math.floor(NumPins*NumPins/2) + Math.floor(Math.max(0, -S)*Math.max(0, -S));
StruggleLockPickProgressSkillLose = NumPins*NumPins/2;StruggleLockPickProgressChallenge = S * -1;
StruggleLockPickProgressCurrentTries = 0;StruggleLockPickSuccessTime = 0;StruggleLockPickFailTime = 0;
DialogMenuButtonBuild(C);for (let P = 0; P < NumPins; P++) {StruggleLockPickOrder.push(P);
StruggleLockPickSet.push(false);StruggleLockPickSetFalse.push(false);StruggleLockPickOffset.push(0);
StruggleLockPickOffsetTarget.push(0);}for (var i = StruggleLockPickOrder.length - 1; i > 0; i--) {
var j = Math.floor(Math.random() * (i + 1));var temp = StruggleLockPickOrder[i];
StruggleLockPickOrder[i] = StruggleLockPickOrder[j];StruggleLockPickOrder[j] = temp;}
if ((Item.Property == null)) Item.Property = {};if (Item.Property != null)
if ((Item.Property.LockPickSeed == null) || (typeof Item.Property.LockPickSeed != "string")) {Item.Property.LockPickSeed = CommonConvertArrayToString(StruggleLockPickOrder); StruggleLockPickTotalTries = 0;}
else {var conv = CommonConvertStringToArray(Item.Property.LockPickSeed);for (let PP = 0; PP < conv.length; PP++) {
if (typeof conv[PP] != "number") {Item.Property.LockPickSeed = CommonConvertArrayToString(StruggleLockPickOrder);
conv = StruggleLockPickOrder;break;}}StruggleLockPickOrder = conv;}var PickingImpossible = false;if (S < -6 && LockPickingImpossible) {
PickingImpossible = true;StruggleLockPickImpossiblePins.push(StruggleLockPickOrder[StruggleLockPickOrder.length-1]);
if (NumPins >= 6) StruggleLockPickImpossiblePins.push(StruggleLockPickOrder[StruggleLockPickOrder.length-2]);
if (NumPins >= 8) StruggleLockPickImpossiblePins.push(StruggleLockPickOrder[StruggleLockPickOrder.length-3]);}
var NumTries = Math.max(Math.floor(NumPins * (1.5 - 0.3*BondageLevel/10)),
Math.ceil(NumPins * (3.25 - BondageLevel/10) - Math.max(0, (StruggleLockPickProgressChallenge + BondageLevel/2)*1.5)));	
StruggleLockPickProgressMaxTries = Math.max(1, NumTries - NumPins);}}
 
 
